name: Release

on:
  push:
    tags:
    - "v[0-9]+.[0-9]+.[0-9]+"
    - "v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+"

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false -Xmx6g -Xms6g
  CONTAINER_REGISTRY: us-docker.pkg.dev/spinnaker-community/docker

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/setup-java@v2
        with:
          java-version: 11
          distribution: 'zulu'
          cache: 'gradle'
      - name: Assemble release info
        id: release_info
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          . .github/workflows/release_info.sh ${{ github.event.repository.full_name }}
          echo ::set-output name=CHANGELOG::$(echo -e "${CHANGELOG}")
          echo ::set-output name=SKIP_RELEASE::${SKIP_RELEASE}
          echo ::set-output name=IS_CANDIDATE::${IS_CANDIDATE}
          echo ::set-output name=RELEASE_VERSION::${RELEASE_VERSION}
      - name: Prepare build variables
        id: build_variables
        run: |
          echo ::set-output name=REPO::${GITHUB_REPOSITORY##*/}
          echo ::set-output name=VERSION::"$(git rev-parse --short HEAD)-$(date --utc +'%Y%m%d%H%M')"
      - name: Release build
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.release_info.outputs.RELEASE_VERSION }}
        run: |
          ./gradlew --info build ${{ steps.build_variables.outputs.REPO }}-web:installDist 
      - name: Publish apt packages to Google Artifact Registry
        env:
          ORG_GRADLE_PROJECT_version: ${{ steps.release_info.outputs.RELEASE_VERSION }}
          ORG_GRADLE_PROJECT_artifactRegistryPublishEnabled: false
        run: |
          ./gradlew --info publish
      - name: Create release
        if: steps.release_info.outputs.SKIP_RELEASE == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ github.event.repository.name }} ${{ github.ref }}
          body: |
            ${{ steps.release_info.outputs.CHANGELOG }}
          draft: false
          prerelease: ${{ steps.release_info.outputs.IS_CANDIDATE }}
